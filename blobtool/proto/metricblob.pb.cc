// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metricblob.proto

#include "metricblob.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcDiskSpaceMetric_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BmcFdStatMetric_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcFdStatMetric_BmcFdStat_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcMemoryMetric_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BmcProcStatMetric_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcProcStatMetric_BmcProcStat_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BmcStringTable_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcStringTable_StringEntry_metricblob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metricblob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcUptimeMetric_metricblob_2eproto;
namespace bmcmetrics {
namespace metricproto {
class BmcMemoryMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcMemoryMetric> _instance;
} _BmcMemoryMetric_default_instance_;
class BmcUptimeMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcUptimeMetric> _instance;
} _BmcUptimeMetric_default_instance_;
class BmcDiskSpaceMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcDiskSpaceMetric> _instance;
} _BmcDiskSpaceMetric_default_instance_;
class BmcProcStatMetric_BmcProcStatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcProcStatMetric_BmcProcStat> _instance;
} _BmcProcStatMetric_BmcProcStat_default_instance_;
class BmcProcStatMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcProcStatMetric> _instance;
} _BmcProcStatMetric_default_instance_;
class BmcFdStatMetric_BmcFdStatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcFdStatMetric_BmcFdStat> _instance;
} _BmcFdStatMetric_BmcFdStat_default_instance_;
class BmcFdStatMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcFdStatMetric> _instance;
} _BmcFdStatMetric_default_instance_;
class BmcStringTable_StringEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcStringTable_StringEntry> _instance;
} _BmcStringTable_StringEntry_default_instance_;
class BmcStringTableDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcStringTable> _instance;
} _BmcStringTable_default_instance_;
class BmcMetricSnapshotDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BmcMetricSnapshot> _instance;
} _BmcMetricSnapshot_default_instance_;
}  // namespace metricproto
}  // namespace bmcmetrics
static void InitDefaultsscc_info_BmcDiskSpaceMetric_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcDiskSpaceMetric_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcDiskSpaceMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcDiskSpaceMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcDiskSpaceMetric_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BmcDiskSpaceMetric_metricblob_2eproto}, {}};

static void InitDefaultsscc_info_BmcFdStatMetric_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcFdStatMetric_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcFdStatMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcFdStatMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BmcFdStatMetric_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BmcFdStatMetric_metricblob_2eproto}, {
      &scc_info_BmcFdStatMetric_BmcFdStat_metricblob_2eproto.base,}};

static void InitDefaultsscc_info_BmcFdStatMetric_BmcFdStat_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcFdStatMetric_BmcFdStat_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcFdStatMetric_BmcFdStat_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BmcFdStatMetric_BmcFdStat_metricblob_2eproto}, {}};

static void InitDefaultsscc_info_BmcMemoryMetric_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcMemoryMetric_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcMemoryMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcMemoryMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcMemoryMetric_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BmcMemoryMetric_metricblob_2eproto}, {}};

static void InitDefaultsscc_info_BmcMetricSnapshot_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcMetricSnapshot();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcMetricSnapshot::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_BmcMetricSnapshot_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_BmcMetricSnapshot_metricblob_2eproto}, {
      &scc_info_BmcStringTable_metricblob_2eproto.base,
      &scc_info_BmcMemoryMetric_metricblob_2eproto.base,
      &scc_info_BmcUptimeMetric_metricblob_2eproto.base,
      &scc_info_BmcDiskSpaceMetric_metricblob_2eproto.base,
      &scc_info_BmcProcStatMetric_metricblob_2eproto.base,
      &scc_info_BmcFdStatMetric_metricblob_2eproto.base,}};

static void InitDefaultsscc_info_BmcProcStatMetric_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcProcStatMetric_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcProcStatMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcProcStatMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BmcProcStatMetric_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BmcProcStatMetric_metricblob_2eproto}, {
      &scc_info_BmcProcStatMetric_BmcProcStat_metricblob_2eproto.base,}};

static void InitDefaultsscc_info_BmcProcStatMetric_BmcProcStat_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcProcStatMetric_BmcProcStat_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcProcStatMetric_BmcProcStat_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BmcProcStatMetric_BmcProcStat_metricblob_2eproto}, {}};

static void InitDefaultsscc_info_BmcStringTable_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcStringTable_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcStringTable();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcStringTable::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BmcStringTable_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BmcStringTable_metricblob_2eproto}, {
      &scc_info_BmcStringTable_StringEntry_metricblob_2eproto.base,}};

static void InitDefaultsscc_info_BmcStringTable_StringEntry_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcStringTable_StringEntry_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcStringTable_StringEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcStringTable_StringEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcStringTable_StringEntry_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BmcStringTable_StringEntry_metricblob_2eproto}, {}};

static void InitDefaultsscc_info_BmcUptimeMetric_metricblob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bmcmetrics::metricproto::_BmcUptimeMetric_default_instance_;
    new (ptr) ::bmcmetrics::metricproto::BmcUptimeMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bmcmetrics::metricproto::BmcUptimeMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BmcUptimeMetric_metricblob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BmcUptimeMetric_metricblob_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_metricblob_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_metricblob_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_metricblob_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_metricblob_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMemoryMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMemoryMetric, mem_available_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMemoryMetric, slab_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMemoryMetric, kernel_stack_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcUptimeMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcUptimeMetric, uptime_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcUptimeMetric, idle_process_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcDiskSpaceMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcDiskSpaceMetric, rwfs_kib_available_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat, sidx_cmdline_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat, utime_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat, stime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcProcStatMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcProcStatMetric, stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat, sidx_cmdline_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat, fd_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcFdStatMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcFdStatMetric, stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcStringTable_StringEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcStringTable_StringEntry, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcStringTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcStringTable, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMetricSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMetricSnapshot, string_table_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMetricSnapshot, memory_metric_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMetricSnapshot, uptime_metric_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMetricSnapshot, storage_space_metric_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMetricSnapshot, procstat_metric_),
  PROTOBUF_FIELD_OFFSET(::bmcmetrics::metricproto::BmcMetricSnapshot, fdstat_metric_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bmcmetrics::metricproto::BmcMemoryMetric)},
  { 8, -1, sizeof(::bmcmetrics::metricproto::BmcUptimeMetric)},
  { 15, -1, sizeof(::bmcmetrics::metricproto::BmcDiskSpaceMetric)},
  { 21, -1, sizeof(::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat)},
  { 29, -1, sizeof(::bmcmetrics::metricproto::BmcProcStatMetric)},
  { 35, -1, sizeof(::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat)},
  { 42, -1, sizeof(::bmcmetrics::metricproto::BmcFdStatMetric)},
  { 48, -1, sizeof(::bmcmetrics::metricproto::BmcStringTable_StringEntry)},
  { 54, -1, sizeof(::bmcmetrics::metricproto::BmcStringTable)},
  { 60, -1, sizeof(::bmcmetrics::metricproto::BmcMetricSnapshot)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcMemoryMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcUptimeMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcDiskSpaceMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcProcStatMetric_BmcProcStat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcProcStatMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcFdStatMetric_BmcFdStat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcFdStatMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcStringTable_StringEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcStringTable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_),
};

const char descriptor_table_protodef_metricblob_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020metricblob.proto\022\026bmcmetrics.metricpro"
  "to\"L\n\017BmcMemoryMetric\022\025\n\rmem_available\030\001"
  " \001(\005\022\014\n\004slab\030\002 \001(\005\022\024\n\014kernel_stack\030\003 \001(\005"
  "\"<\n\017BmcUptimeMetric\022\016\n\006uptime\030\001 \001(\002\022\031\n\021i"
  "dle_process_time\030\002 \001(\002\"0\n\022BmcDiskSpaceMe"
  "tric\022\032\n\022rwfs_kib_available\030\001 \001(\005\"\234\001\n\021Bmc"
  "ProcStatMetric\022D\n\005stats\030\n \003(\01325.bmcmetri"
  "cs.metricproto.BmcProcStatMetric.BmcProc"
  "Stat\032A\n\013BmcProcStat\022\024\n\014sidx_cmdline\030\001 \001("
  "\005\022\r\n\005utime\030\002 \001(\002\022\r\n\005stime\030\003 \001(\002\"\210\001\n\017BmcF"
  "dStatMetric\022@\n\005stats\030\n \003(\01321.bmcmetrics."
  "metricproto.BmcFdStatMetric.BmcFdStat\0323\n"
  "\tBmcFdStat\022\024\n\014sidx_cmdline\030\001 \001(\005\022\020\n\010fd_c"
  "ount\030\002 \001(\005\"s\n\016BmcStringTable\022C\n\007entries\030"
  "\n \003(\01322.bmcmetrics.metricproto.BmcString"
  "Table.StringEntry\032\034\n\013StringEntry\022\r\n\005valu"
  "e\030\001 \001(\t\"\237\003\n\021BmcMetricSnapshot\022<\n\014string_"
  "table\030\001 \001(\0132&.bmcmetrics.metricproto.Bmc"
  "StringTable\022>\n\rmemory_metric\030\002 \001(\0132\'.bmc"
  "metrics.metricproto.BmcMemoryMetric\022>\n\ru"
  "ptime_metric\030\003 \001(\0132\'.bmcmetrics.metricpr"
  "oto.BmcUptimeMetric\022H\n\024storage_space_met"
  "ric\030\004 \001(\0132*.bmcmetrics.metricproto.BmcDi"
  "skSpaceMetric\022B\n\017procstat_metric\030\005 \001(\0132)"
  ".bmcmetrics.metricproto.BmcProcStatMetri"
  "c\022>\n\rfdstat_metric\030\006 \001(\0132\'.bmcmetrics.me"
  "tricproto.BmcFdStatMetricb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_metricblob_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_metricblob_2eproto_sccs[10] = {
  &scc_info_BmcDiskSpaceMetric_metricblob_2eproto.base,
  &scc_info_BmcFdStatMetric_metricblob_2eproto.base,
  &scc_info_BmcFdStatMetric_BmcFdStat_metricblob_2eproto.base,
  &scc_info_BmcMemoryMetric_metricblob_2eproto.base,
  &scc_info_BmcMetricSnapshot_metricblob_2eproto.base,
  &scc_info_BmcProcStatMetric_metricblob_2eproto.base,
  &scc_info_BmcProcStatMetric_BmcProcStat_metricblob_2eproto.base,
  &scc_info_BmcStringTable_metricblob_2eproto.base,
  &scc_info_BmcStringTable_StringEntry_metricblob_2eproto.base,
  &scc_info_BmcUptimeMetric_metricblob_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_metricblob_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_metricblob_2eproto = {
  false, false, descriptor_table_protodef_metricblob_2eproto, "metricblob.proto", 1073,
  &descriptor_table_metricblob_2eproto_once, descriptor_table_metricblob_2eproto_sccs, descriptor_table_metricblob_2eproto_deps, 10, 0,
  schemas, file_default_instances, TableStruct_metricblob_2eproto::offsets,
  file_level_metadata_metricblob_2eproto, 10, file_level_enum_descriptors_metricblob_2eproto, file_level_service_descriptors_metricblob_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_metricblob_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_metricblob_2eproto)), true);
namespace bmcmetrics {
namespace metricproto {

// ===================================================================

void BmcMemoryMetric::InitAsDefaultInstance() {
}
class BmcMemoryMetric::_Internal {
 public:
};

BmcMemoryMetric::BmcMemoryMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcMemoryMetric)
}
BmcMemoryMetric::BmcMemoryMetric(const BmcMemoryMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mem_available_, &from.mem_available_,
    static_cast<size_t>(reinterpret_cast<char*>(&kernel_stack_) -
    reinterpret_cast<char*>(&mem_available_)) + sizeof(kernel_stack_));
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcMemoryMetric)
}

void BmcMemoryMetric::SharedCtor() {
  ::memset(&mem_available_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kernel_stack_) -
      reinterpret_cast<char*>(&mem_available_)) + sizeof(kernel_stack_));
}

BmcMemoryMetric::~BmcMemoryMetric() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcMemoryMetric)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcMemoryMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcMemoryMetric::ArenaDtor(void* object) {
  BmcMemoryMetric* _this = reinterpret_cast< BmcMemoryMetric* >(object);
  (void)_this;
}
void BmcMemoryMetric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcMemoryMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcMemoryMetric& BmcMemoryMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcMemoryMetric_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcMemoryMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcMemoryMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mem_available_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kernel_stack_) -
      reinterpret_cast<char*>(&mem_available_)) + sizeof(kernel_stack_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcMemoryMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 mem_available = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          mem_available_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 slab = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          slab_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 kernel_stack = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          kernel_stack_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcMemoryMetric::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcMemoryMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mem_available = 1;
  if (this->mem_available() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_mem_available(), target);
  }

  // int32 slab = 2;
  if (this->slab() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_slab(), target);
  }

  // int32 kernel_stack = 3;
  if (this->kernel_stack() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_kernel_stack(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcMemoryMetric)
  return target;
}

size_t BmcMemoryMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcMemoryMetric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 mem_available = 1;
  if (this->mem_available() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mem_available());
  }

  // int32 slab = 2;
  if (this->slab() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_slab());
  }

  // int32 kernel_stack = 3;
  if (this->kernel_stack() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_stack());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcMemoryMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcMemoryMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcMemoryMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcMemoryMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcMemoryMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcMemoryMetric)
    MergeFrom(*source);
  }
}

void BmcMemoryMetric::MergeFrom(const BmcMemoryMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcMemoryMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mem_available() != 0) {
    _internal_set_mem_available(from._internal_mem_available());
  }
  if (from.slab() != 0) {
    _internal_set_slab(from._internal_slab());
  }
  if (from.kernel_stack() != 0) {
    _internal_set_kernel_stack(from._internal_kernel_stack());
  }
}

void BmcMemoryMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcMemoryMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcMemoryMetric::CopyFrom(const BmcMemoryMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcMemoryMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcMemoryMetric::IsInitialized() const {
  return true;
}

void BmcMemoryMetric::InternalSwap(BmcMemoryMetric* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BmcMemoryMetric, kernel_stack_)
      + sizeof(BmcMemoryMetric::kernel_stack_)
      - PROTOBUF_FIELD_OFFSET(BmcMemoryMetric, mem_available_)>(
          reinterpret_cast<char*>(&mem_available_),
          reinterpret_cast<char*>(&other->mem_available_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcMemoryMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcUptimeMetric::InitAsDefaultInstance() {
}
class BmcUptimeMetric::_Internal {
 public:
};

BmcUptimeMetric::BmcUptimeMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcUptimeMetric)
}
BmcUptimeMetric::BmcUptimeMetric(const BmcUptimeMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&uptime_, &from.uptime_,
    static_cast<size_t>(reinterpret_cast<char*>(&idle_process_time_) -
    reinterpret_cast<char*>(&uptime_)) + sizeof(idle_process_time_));
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcUptimeMetric)
}

void BmcUptimeMetric::SharedCtor() {
  ::memset(&uptime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idle_process_time_) -
      reinterpret_cast<char*>(&uptime_)) + sizeof(idle_process_time_));
}

BmcUptimeMetric::~BmcUptimeMetric() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcUptimeMetric)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcUptimeMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcUptimeMetric::ArenaDtor(void* object) {
  BmcUptimeMetric* _this = reinterpret_cast< BmcUptimeMetric* >(object);
  (void)_this;
}
void BmcUptimeMetric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcUptimeMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcUptimeMetric& BmcUptimeMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcUptimeMetric_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcUptimeMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcUptimeMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uptime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idle_process_time_) -
      reinterpret_cast<char*>(&uptime_)) + sizeof(idle_process_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcUptimeMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float uptime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          uptime_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float idle_process_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          idle_process_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcUptimeMetric::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcUptimeMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float uptime = 1;
  if (!(this->uptime() <= 0 && this->uptime() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_uptime(), target);
  }

  // float idle_process_time = 2;
  if (!(this->idle_process_time() <= 0 && this->idle_process_time() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_idle_process_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcUptimeMetric)
  return target;
}

size_t BmcUptimeMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcUptimeMetric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float uptime = 1;
  if (!(this->uptime() <= 0 && this->uptime() >= 0)) {
    total_size += 1 + 4;
  }

  // float idle_process_time = 2;
  if (!(this->idle_process_time() <= 0 && this->idle_process_time() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcUptimeMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcUptimeMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcUptimeMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcUptimeMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcUptimeMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcUptimeMetric)
    MergeFrom(*source);
  }
}

void BmcUptimeMetric::MergeFrom(const BmcUptimeMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcUptimeMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.uptime() <= 0 && from.uptime() >= 0)) {
    _internal_set_uptime(from._internal_uptime());
  }
  if (!(from.idle_process_time() <= 0 && from.idle_process_time() >= 0)) {
    _internal_set_idle_process_time(from._internal_idle_process_time());
  }
}

void BmcUptimeMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcUptimeMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcUptimeMetric::CopyFrom(const BmcUptimeMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcUptimeMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcUptimeMetric::IsInitialized() const {
  return true;
}

void BmcUptimeMetric::InternalSwap(BmcUptimeMetric* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BmcUptimeMetric, idle_process_time_)
      + sizeof(BmcUptimeMetric::idle_process_time_)
      - PROTOBUF_FIELD_OFFSET(BmcUptimeMetric, uptime_)>(
          reinterpret_cast<char*>(&uptime_),
          reinterpret_cast<char*>(&other->uptime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcUptimeMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcDiskSpaceMetric::InitAsDefaultInstance() {
}
class BmcDiskSpaceMetric::_Internal {
 public:
};

BmcDiskSpaceMetric::BmcDiskSpaceMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcDiskSpaceMetric)
}
BmcDiskSpaceMetric::BmcDiskSpaceMetric(const BmcDiskSpaceMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rwfs_kib_available_ = from.rwfs_kib_available_;
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcDiskSpaceMetric)
}

void BmcDiskSpaceMetric::SharedCtor() {
  rwfs_kib_available_ = 0;
}

BmcDiskSpaceMetric::~BmcDiskSpaceMetric() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcDiskSpaceMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcDiskSpaceMetric::ArenaDtor(void* object) {
  BmcDiskSpaceMetric* _this = reinterpret_cast< BmcDiskSpaceMetric* >(object);
  (void)_this;
}
void BmcDiskSpaceMetric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcDiskSpaceMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcDiskSpaceMetric& BmcDiskSpaceMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcDiskSpaceMetric_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcDiskSpaceMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rwfs_kib_available_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcDiskSpaceMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rwfs_kib_available = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rwfs_kib_available_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcDiskSpaceMetric::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rwfs_kib_available = 1;
  if (this->rwfs_kib_available() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_rwfs_kib_available(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  return target;
}

size_t BmcDiskSpaceMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rwfs_kib_available = 1;
  if (this->rwfs_kib_available() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rwfs_kib_available());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcDiskSpaceMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcDiskSpaceMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcDiskSpaceMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcDiskSpaceMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcDiskSpaceMetric)
    MergeFrom(*source);
  }
}

void BmcDiskSpaceMetric::MergeFrom(const BmcDiskSpaceMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rwfs_kib_available() != 0) {
    _internal_set_rwfs_kib_available(from._internal_rwfs_kib_available());
  }
}

void BmcDiskSpaceMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcDiskSpaceMetric::CopyFrom(const BmcDiskSpaceMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcDiskSpaceMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcDiskSpaceMetric::IsInitialized() const {
  return true;
}

void BmcDiskSpaceMetric::InternalSwap(BmcDiskSpaceMetric* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(rwfs_kib_available_, other->rwfs_kib_available_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcDiskSpaceMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcProcStatMetric_BmcProcStat::InitAsDefaultInstance() {
}
class BmcProcStatMetric_BmcProcStat::_Internal {
 public:
};

BmcProcStatMetric_BmcProcStat::BmcProcStatMetric_BmcProcStat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
}
BmcProcStatMetric_BmcProcStat::BmcProcStatMetric_BmcProcStat(const BmcProcStatMetric_BmcProcStat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&sidx_cmdline_, &from.sidx_cmdline_,
    static_cast<size_t>(reinterpret_cast<char*>(&stime_) -
    reinterpret_cast<char*>(&sidx_cmdline_)) + sizeof(stime_));
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
}

void BmcProcStatMetric_BmcProcStat::SharedCtor() {
  ::memset(&sidx_cmdline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stime_) -
      reinterpret_cast<char*>(&sidx_cmdline_)) + sizeof(stime_));
}

BmcProcStatMetric_BmcProcStat::~BmcProcStatMetric_BmcProcStat() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcProcStatMetric_BmcProcStat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcProcStatMetric_BmcProcStat::ArenaDtor(void* object) {
  BmcProcStatMetric_BmcProcStat* _this = reinterpret_cast< BmcProcStatMetric_BmcProcStat* >(object);
  (void)_this;
}
void BmcProcStatMetric_BmcProcStat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcProcStatMetric_BmcProcStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcProcStatMetric_BmcProcStat& BmcProcStatMetric_BmcProcStat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcProcStatMetric_BmcProcStat_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcProcStatMetric_BmcProcStat::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sidx_cmdline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stime_) -
      reinterpret_cast<char*>(&sidx_cmdline_)) + sizeof(stime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcProcStatMetric_BmcProcStat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sidx_cmdline = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sidx_cmdline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float utime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          utime_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float stime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          stime_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcProcStatMetric_BmcProcStat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sidx_cmdline = 1;
  if (this->sidx_cmdline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sidx_cmdline(), target);
  }

  // float utime = 2;
  if (!(this->utime() <= 0 && this->utime() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_utime(), target);
  }

  // float stime = 3;
  if (!(this->stime() <= 0 && this->stime() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_stime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  return target;
}

size_t BmcProcStatMetric_BmcProcStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sidx_cmdline = 1;
  if (this->sidx_cmdline() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sidx_cmdline());
  }

  // float utime = 2;
  if (!(this->utime() <= 0 && this->utime() >= 0)) {
    total_size += 1 + 4;
  }

  // float stime = 3;
  if (!(this->stime() <= 0 && this->stime() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcProcStatMetric_BmcProcStat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcProcStatMetric_BmcProcStat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcProcStatMetric_BmcProcStat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
    MergeFrom(*source);
  }
}

void BmcProcStatMetric_BmcProcStat::MergeFrom(const BmcProcStatMetric_BmcProcStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sidx_cmdline() != 0) {
    _internal_set_sidx_cmdline(from._internal_sidx_cmdline());
  }
  if (!(from.utime() <= 0 && from.utime() >= 0)) {
    _internal_set_utime(from._internal_utime());
  }
  if (!(from.stime() <= 0 && from.stime() >= 0)) {
    _internal_set_stime(from._internal_stime());
  }
}

void BmcProcStatMetric_BmcProcStat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcProcStatMetric_BmcProcStat::CopyFrom(const BmcProcStatMetric_BmcProcStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcProcStatMetric_BmcProcStat::IsInitialized() const {
  return true;
}

void BmcProcStatMetric_BmcProcStat::InternalSwap(BmcProcStatMetric_BmcProcStat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BmcProcStatMetric_BmcProcStat, stime_)
      + sizeof(BmcProcStatMetric_BmcProcStat::stime_)
      - PROTOBUF_FIELD_OFFSET(BmcProcStatMetric_BmcProcStat, sidx_cmdline_)>(
          reinterpret_cast<char*>(&sidx_cmdline_),
          reinterpret_cast<char*>(&other->sidx_cmdline_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcProcStatMetric_BmcProcStat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcProcStatMetric::InitAsDefaultInstance() {
}
class BmcProcStatMetric::_Internal {
 public:
};

BmcProcStatMetric::BmcProcStatMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcProcStatMetric)
}
BmcProcStatMetric::BmcProcStatMetric(const BmcProcStatMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcProcStatMetric)
}

void BmcProcStatMetric::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BmcProcStatMetric_metricblob_2eproto.base);
}

BmcProcStatMetric::~BmcProcStatMetric() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcProcStatMetric)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcProcStatMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcProcStatMetric::ArenaDtor(void* object) {
  BmcProcStatMetric* _this = reinterpret_cast< BmcProcStatMetric* >(object);
  (void)_this;
}
void BmcProcStatMetric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcProcStatMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcProcStatMetric& BmcProcStatMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcProcStatMetric_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcProcStatMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcProcStatMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcProcStatMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat stats = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcProcStatMetric::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcProcStatMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat stats = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_stats(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcProcStatMetric)
  return target;
}

size_t BmcProcStatMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcProcStatMetric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bmcmetrics.metricproto.BmcProcStatMetric.BmcProcStat stats = 10;
  total_size += 1UL * this->_internal_stats_size();
  for (const auto& msg : this->stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcProcStatMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcProcStatMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcProcStatMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcProcStatMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcProcStatMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcProcStatMetric)
    MergeFrom(*source);
  }
}

void BmcProcStatMetric::MergeFrom(const BmcProcStatMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcProcStatMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
}

void BmcProcStatMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcProcStatMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcProcStatMetric::CopyFrom(const BmcProcStatMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcProcStatMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcProcStatMetric::IsInitialized() const {
  return true;
}

void BmcProcStatMetric::InternalSwap(BmcProcStatMetric* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stats_.InternalSwap(&other->stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcProcStatMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcFdStatMetric_BmcFdStat::InitAsDefaultInstance() {
}
class BmcFdStatMetric_BmcFdStat::_Internal {
 public:
};

BmcFdStatMetric_BmcFdStat::BmcFdStatMetric_BmcFdStat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
}
BmcFdStatMetric_BmcFdStat::BmcFdStatMetric_BmcFdStat(const BmcFdStatMetric_BmcFdStat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&sidx_cmdline_, &from.sidx_cmdline_,
    static_cast<size_t>(reinterpret_cast<char*>(&fd_count_) -
    reinterpret_cast<char*>(&sidx_cmdline_)) + sizeof(fd_count_));
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
}

void BmcFdStatMetric_BmcFdStat::SharedCtor() {
  ::memset(&sidx_cmdline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fd_count_) -
      reinterpret_cast<char*>(&sidx_cmdline_)) + sizeof(fd_count_));
}

BmcFdStatMetric_BmcFdStat::~BmcFdStatMetric_BmcFdStat() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcFdStatMetric_BmcFdStat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcFdStatMetric_BmcFdStat::ArenaDtor(void* object) {
  BmcFdStatMetric_BmcFdStat* _this = reinterpret_cast< BmcFdStatMetric_BmcFdStat* >(object);
  (void)_this;
}
void BmcFdStatMetric_BmcFdStat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcFdStatMetric_BmcFdStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcFdStatMetric_BmcFdStat& BmcFdStatMetric_BmcFdStat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcFdStatMetric_BmcFdStat_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcFdStatMetric_BmcFdStat::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sidx_cmdline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fd_count_) -
      reinterpret_cast<char*>(&sidx_cmdline_)) + sizeof(fd_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcFdStatMetric_BmcFdStat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sidx_cmdline = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sidx_cmdline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 fd_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          fd_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcFdStatMetric_BmcFdStat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sidx_cmdline = 1;
  if (this->sidx_cmdline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sidx_cmdline(), target);
  }

  // int32 fd_count = 2;
  if (this->fd_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_fd_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  return target;
}

size_t BmcFdStatMetric_BmcFdStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sidx_cmdline = 1;
  if (this->sidx_cmdline() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sidx_cmdline());
  }

  // int32 fd_count = 2;
  if (this->fd_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fd_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcFdStatMetric_BmcFdStat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcFdStatMetric_BmcFdStat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcFdStatMetric_BmcFdStat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
    MergeFrom(*source);
  }
}

void BmcFdStatMetric_BmcFdStat::MergeFrom(const BmcFdStatMetric_BmcFdStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sidx_cmdline() != 0) {
    _internal_set_sidx_cmdline(from._internal_sidx_cmdline());
  }
  if (from.fd_count() != 0) {
    _internal_set_fd_count(from._internal_fd_count());
  }
}

void BmcFdStatMetric_BmcFdStat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcFdStatMetric_BmcFdStat::CopyFrom(const BmcFdStatMetric_BmcFdStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcFdStatMetric_BmcFdStat::IsInitialized() const {
  return true;
}

void BmcFdStatMetric_BmcFdStat::InternalSwap(BmcFdStatMetric_BmcFdStat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BmcFdStatMetric_BmcFdStat, fd_count_)
      + sizeof(BmcFdStatMetric_BmcFdStat::fd_count_)
      - PROTOBUF_FIELD_OFFSET(BmcFdStatMetric_BmcFdStat, sidx_cmdline_)>(
          reinterpret_cast<char*>(&sidx_cmdline_),
          reinterpret_cast<char*>(&other->sidx_cmdline_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcFdStatMetric_BmcFdStat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcFdStatMetric::InitAsDefaultInstance() {
}
class BmcFdStatMetric::_Internal {
 public:
};

BmcFdStatMetric::BmcFdStatMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcFdStatMetric)
}
BmcFdStatMetric::BmcFdStatMetric(const BmcFdStatMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcFdStatMetric)
}

void BmcFdStatMetric::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BmcFdStatMetric_metricblob_2eproto.base);
}

BmcFdStatMetric::~BmcFdStatMetric() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcFdStatMetric)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcFdStatMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcFdStatMetric::ArenaDtor(void* object) {
  BmcFdStatMetric* _this = reinterpret_cast< BmcFdStatMetric* >(object);
  (void)_this;
}
void BmcFdStatMetric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcFdStatMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcFdStatMetric& BmcFdStatMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcFdStatMetric_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcFdStatMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcFdStatMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcFdStatMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat stats = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcFdStatMetric::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcFdStatMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat stats = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_stats(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcFdStatMetric)
  return target;
}

size_t BmcFdStatMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcFdStatMetric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bmcmetrics.metricproto.BmcFdStatMetric.BmcFdStat stats = 10;
  total_size += 1UL * this->_internal_stats_size();
  for (const auto& msg : this->stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcFdStatMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcFdStatMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcFdStatMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcFdStatMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcFdStatMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcFdStatMetric)
    MergeFrom(*source);
  }
}

void BmcFdStatMetric::MergeFrom(const BmcFdStatMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcFdStatMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
}

void BmcFdStatMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcFdStatMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcFdStatMetric::CopyFrom(const BmcFdStatMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcFdStatMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcFdStatMetric::IsInitialized() const {
  return true;
}

void BmcFdStatMetric::InternalSwap(BmcFdStatMetric* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stats_.InternalSwap(&other->stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcFdStatMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcStringTable_StringEntry::InitAsDefaultInstance() {
}
class BmcStringTable_StringEntry::_Internal {
 public:
};

BmcStringTable_StringEntry::BmcStringTable_StringEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcStringTable.StringEntry)
}
BmcStringTable_StringEntry::BmcStringTable_StringEntry(const BmcStringTable_StringEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcStringTable.StringEntry)
}

void BmcStringTable_StringEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BmcStringTable_StringEntry_metricblob_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BmcStringTable_StringEntry::~BmcStringTable_StringEntry() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcStringTable_StringEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BmcStringTable_StringEntry::ArenaDtor(void* object) {
  BmcStringTable_StringEntry* _this = reinterpret_cast< BmcStringTable_StringEntry* >(object);
  (void)_this;
}
void BmcStringTable_StringEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcStringTable_StringEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcStringTable_StringEntry& BmcStringTable_StringEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcStringTable_StringEntry_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcStringTable_StringEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcStringTable_StringEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bmcmetrics.metricproto.BmcStringTable.StringEntry.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcStringTable_StringEntry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bmcmetrics.metricproto.BmcStringTable.StringEntry.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  return target;
}

size_t BmcStringTable_StringEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcStringTable_StringEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcStringTable_StringEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcStringTable_StringEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcStringTable.StringEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcStringTable.StringEntry)
    MergeFrom(*source);
  }
}

void BmcStringTable_StringEntry::MergeFrom(const BmcStringTable_StringEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void BmcStringTable_StringEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcStringTable_StringEntry::CopyFrom(const BmcStringTable_StringEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcStringTable.StringEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcStringTable_StringEntry::IsInitialized() const {
  return true;
}

void BmcStringTable_StringEntry::InternalSwap(BmcStringTable_StringEntry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcStringTable_StringEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcStringTable::InitAsDefaultInstance() {
}
class BmcStringTable::_Internal {
 public:
};

BmcStringTable::BmcStringTable(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcStringTable)
}
BmcStringTable::BmcStringTable(const BmcStringTable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcStringTable)
}

void BmcStringTable::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BmcStringTable_metricblob_2eproto.base);
}

BmcStringTable::~BmcStringTable() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcStringTable)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcStringTable::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BmcStringTable::ArenaDtor(void* object) {
  BmcStringTable* _this = reinterpret_cast< BmcStringTable* >(object);
  (void)_this;
}
void BmcStringTable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcStringTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcStringTable& BmcStringTable::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcStringTable_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcStringTable::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcStringTable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcStringTable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bmcmetrics.metricproto.BmcStringTable.StringEntry entries = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcStringTable::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcStringTable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bmcmetrics.metricproto.BmcStringTable.StringEntry entries = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcStringTable)
  return target;
}

size_t BmcStringTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcStringTable)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bmcmetrics.metricproto.BmcStringTable.StringEntry entries = 10;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcStringTable::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcStringTable)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcStringTable* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcStringTable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcStringTable)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcStringTable)
    MergeFrom(*source);
  }
}

void BmcStringTable::MergeFrom(const BmcStringTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcStringTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void BmcStringTable::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcStringTable::CopyFrom(const BmcStringTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcStringTable::IsInitialized() const {
  return true;
}

void BmcStringTable::InternalSwap(BmcStringTable* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcStringTable::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BmcMetricSnapshot::InitAsDefaultInstance() {
  ::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_._instance.get_mutable()->string_table_ = const_cast< ::bmcmetrics::metricproto::BmcStringTable*>(
      ::bmcmetrics::metricproto::BmcStringTable::internal_default_instance());
  ::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_._instance.get_mutable()->memory_metric_ = const_cast< ::bmcmetrics::metricproto::BmcMemoryMetric*>(
      ::bmcmetrics::metricproto::BmcMemoryMetric::internal_default_instance());
  ::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_._instance.get_mutable()->uptime_metric_ = const_cast< ::bmcmetrics::metricproto::BmcUptimeMetric*>(
      ::bmcmetrics::metricproto::BmcUptimeMetric::internal_default_instance());
  ::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_._instance.get_mutable()->storage_space_metric_ = const_cast< ::bmcmetrics::metricproto::BmcDiskSpaceMetric*>(
      ::bmcmetrics::metricproto::BmcDiskSpaceMetric::internal_default_instance());
  ::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_._instance.get_mutable()->procstat_metric_ = const_cast< ::bmcmetrics::metricproto::BmcProcStatMetric*>(
      ::bmcmetrics::metricproto::BmcProcStatMetric::internal_default_instance());
  ::bmcmetrics::metricproto::_BmcMetricSnapshot_default_instance_._instance.get_mutable()->fdstat_metric_ = const_cast< ::bmcmetrics::metricproto::BmcFdStatMetric*>(
      ::bmcmetrics::metricproto::BmcFdStatMetric::internal_default_instance());
}
class BmcMetricSnapshot::_Internal {
 public:
  static const ::bmcmetrics::metricproto::BmcStringTable& string_table(const BmcMetricSnapshot* msg);
  static const ::bmcmetrics::metricproto::BmcMemoryMetric& memory_metric(const BmcMetricSnapshot* msg);
  static const ::bmcmetrics::metricproto::BmcUptimeMetric& uptime_metric(const BmcMetricSnapshot* msg);
  static const ::bmcmetrics::metricproto::BmcDiskSpaceMetric& storage_space_metric(const BmcMetricSnapshot* msg);
  static const ::bmcmetrics::metricproto::BmcProcStatMetric& procstat_metric(const BmcMetricSnapshot* msg);
  static const ::bmcmetrics::metricproto::BmcFdStatMetric& fdstat_metric(const BmcMetricSnapshot* msg);
};

const ::bmcmetrics::metricproto::BmcStringTable&
BmcMetricSnapshot::_Internal::string_table(const BmcMetricSnapshot* msg) {
  return *msg->string_table_;
}
const ::bmcmetrics::metricproto::BmcMemoryMetric&
BmcMetricSnapshot::_Internal::memory_metric(const BmcMetricSnapshot* msg) {
  return *msg->memory_metric_;
}
const ::bmcmetrics::metricproto::BmcUptimeMetric&
BmcMetricSnapshot::_Internal::uptime_metric(const BmcMetricSnapshot* msg) {
  return *msg->uptime_metric_;
}
const ::bmcmetrics::metricproto::BmcDiskSpaceMetric&
BmcMetricSnapshot::_Internal::storage_space_metric(const BmcMetricSnapshot* msg) {
  return *msg->storage_space_metric_;
}
const ::bmcmetrics::metricproto::BmcProcStatMetric&
BmcMetricSnapshot::_Internal::procstat_metric(const BmcMetricSnapshot* msg) {
  return *msg->procstat_metric_;
}
const ::bmcmetrics::metricproto::BmcFdStatMetric&
BmcMetricSnapshot::_Internal::fdstat_metric(const BmcMetricSnapshot* msg) {
  return *msg->fdstat_metric_;
}
BmcMetricSnapshot::BmcMetricSnapshot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bmcmetrics.metricproto.BmcMetricSnapshot)
}
BmcMetricSnapshot::BmcMetricSnapshot(const BmcMetricSnapshot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_string_table()) {
    string_table_ = new ::bmcmetrics::metricproto::BmcStringTable(*from.string_table_);
  } else {
    string_table_ = nullptr;
  }
  if (from._internal_has_memory_metric()) {
    memory_metric_ = new ::bmcmetrics::metricproto::BmcMemoryMetric(*from.memory_metric_);
  } else {
    memory_metric_ = nullptr;
  }
  if (from._internal_has_uptime_metric()) {
    uptime_metric_ = new ::bmcmetrics::metricproto::BmcUptimeMetric(*from.uptime_metric_);
  } else {
    uptime_metric_ = nullptr;
  }
  if (from._internal_has_storage_space_metric()) {
    storage_space_metric_ = new ::bmcmetrics::metricproto::BmcDiskSpaceMetric(*from.storage_space_metric_);
  } else {
    storage_space_metric_ = nullptr;
  }
  if (from._internal_has_procstat_metric()) {
    procstat_metric_ = new ::bmcmetrics::metricproto::BmcProcStatMetric(*from.procstat_metric_);
  } else {
    procstat_metric_ = nullptr;
  }
  if (from._internal_has_fdstat_metric()) {
    fdstat_metric_ = new ::bmcmetrics::metricproto::BmcFdStatMetric(*from.fdstat_metric_);
  } else {
    fdstat_metric_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bmcmetrics.metricproto.BmcMetricSnapshot)
}

void BmcMetricSnapshot::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BmcMetricSnapshot_metricblob_2eproto.base);
  ::memset(&string_table_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fdstat_metric_) -
      reinterpret_cast<char*>(&string_table_)) + sizeof(fdstat_metric_));
}

BmcMetricSnapshot::~BmcMetricSnapshot() {
  // @@protoc_insertion_point(destructor:bmcmetrics.metricproto.BmcMetricSnapshot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BmcMetricSnapshot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete string_table_;
  if (this != internal_default_instance()) delete memory_metric_;
  if (this != internal_default_instance()) delete uptime_metric_;
  if (this != internal_default_instance()) delete storage_space_metric_;
  if (this != internal_default_instance()) delete procstat_metric_;
  if (this != internal_default_instance()) delete fdstat_metric_;
}

void BmcMetricSnapshot::ArenaDtor(void* object) {
  BmcMetricSnapshot* _this = reinterpret_cast< BmcMetricSnapshot* >(object);
  (void)_this;
}
void BmcMetricSnapshot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BmcMetricSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BmcMetricSnapshot& BmcMetricSnapshot::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BmcMetricSnapshot_metricblob_2eproto.base);
  return *internal_default_instance();
}


void BmcMetricSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:bmcmetrics.metricproto.BmcMetricSnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && string_table_ != nullptr) {
    delete string_table_;
  }
  string_table_ = nullptr;
  if (GetArena() == nullptr && memory_metric_ != nullptr) {
    delete memory_metric_;
  }
  memory_metric_ = nullptr;
  if (GetArena() == nullptr && uptime_metric_ != nullptr) {
    delete uptime_metric_;
  }
  uptime_metric_ = nullptr;
  if (GetArena() == nullptr && storage_space_metric_ != nullptr) {
    delete storage_space_metric_;
  }
  storage_space_metric_ = nullptr;
  if (GetArena() == nullptr && procstat_metric_ != nullptr) {
    delete procstat_metric_;
  }
  procstat_metric_ = nullptr;
  if (GetArena() == nullptr && fdstat_metric_ != nullptr) {
    delete fdstat_metric_;
  }
  fdstat_metric_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BmcMetricSnapshot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bmcmetrics.metricproto.BmcStringTable string_table = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_string_table(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bmcmetrics.metricproto.BmcMemoryMetric memory_metric = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_memory_metric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bmcmetrics.metricproto.BmcUptimeMetric uptime_metric = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_uptime_metric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bmcmetrics.metricproto.BmcDiskSpaceMetric storage_space_metric = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_storage_space_metric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bmcmetrics.metricproto.BmcProcStatMetric procstat_metric = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_procstat_metric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bmcmetrics.metricproto.BmcFdStatMetric fdstat_metric = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_fdstat_metric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BmcMetricSnapshot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bmcmetrics.metricproto.BmcMetricSnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bmcmetrics.metricproto.BmcStringTable string_table = 1;
  if (this->has_string_table()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::string_table(this), target, stream);
  }

  // .bmcmetrics.metricproto.BmcMemoryMetric memory_metric = 2;
  if (this->has_memory_metric()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::memory_metric(this), target, stream);
  }

  // .bmcmetrics.metricproto.BmcUptimeMetric uptime_metric = 3;
  if (this->has_uptime_metric()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::uptime_metric(this), target, stream);
  }

  // .bmcmetrics.metricproto.BmcDiskSpaceMetric storage_space_metric = 4;
  if (this->has_storage_space_metric()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::storage_space_metric(this), target, stream);
  }

  // .bmcmetrics.metricproto.BmcProcStatMetric procstat_metric = 5;
  if (this->has_procstat_metric()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::procstat_metric(this), target, stream);
  }

  // .bmcmetrics.metricproto.BmcFdStatMetric fdstat_metric = 6;
  if (this->has_fdstat_metric()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::fdstat_metric(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bmcmetrics.metricproto.BmcMetricSnapshot)
  return target;
}

size_t BmcMetricSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bmcmetrics.metricproto.BmcMetricSnapshot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bmcmetrics.metricproto.BmcStringTable string_table = 1;
  if (this->has_string_table()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *string_table_);
  }

  // .bmcmetrics.metricproto.BmcMemoryMetric memory_metric = 2;
  if (this->has_memory_metric()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *memory_metric_);
  }

  // .bmcmetrics.metricproto.BmcUptimeMetric uptime_metric = 3;
  if (this->has_uptime_metric()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uptime_metric_);
  }

  // .bmcmetrics.metricproto.BmcDiskSpaceMetric storage_space_metric = 4;
  if (this->has_storage_space_metric()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *storage_space_metric_);
  }

  // .bmcmetrics.metricproto.BmcProcStatMetric procstat_metric = 5;
  if (this->has_procstat_metric()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *procstat_metric_);
  }

  // .bmcmetrics.metricproto.BmcFdStatMetric fdstat_metric = 6;
  if (this->has_fdstat_metric()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fdstat_metric_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmcMetricSnapshot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bmcmetrics.metricproto.BmcMetricSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const BmcMetricSnapshot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BmcMetricSnapshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bmcmetrics.metricproto.BmcMetricSnapshot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bmcmetrics.metricproto.BmcMetricSnapshot)
    MergeFrom(*source);
  }
}

void BmcMetricSnapshot::MergeFrom(const BmcMetricSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bmcmetrics.metricproto.BmcMetricSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_string_table()) {
    _internal_mutable_string_table()->::bmcmetrics::metricproto::BmcStringTable::MergeFrom(from._internal_string_table());
  }
  if (from.has_memory_metric()) {
    _internal_mutable_memory_metric()->::bmcmetrics::metricproto::BmcMemoryMetric::MergeFrom(from._internal_memory_metric());
  }
  if (from.has_uptime_metric()) {
    _internal_mutable_uptime_metric()->::bmcmetrics::metricproto::BmcUptimeMetric::MergeFrom(from._internal_uptime_metric());
  }
  if (from.has_storage_space_metric()) {
    _internal_mutable_storage_space_metric()->::bmcmetrics::metricproto::BmcDiskSpaceMetric::MergeFrom(from._internal_storage_space_metric());
  }
  if (from.has_procstat_metric()) {
    _internal_mutable_procstat_metric()->::bmcmetrics::metricproto::BmcProcStatMetric::MergeFrom(from._internal_procstat_metric());
  }
  if (from.has_fdstat_metric()) {
    _internal_mutable_fdstat_metric()->::bmcmetrics::metricproto::BmcFdStatMetric::MergeFrom(from._internal_fdstat_metric());
  }
}

void BmcMetricSnapshot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bmcmetrics.metricproto.BmcMetricSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmcMetricSnapshot::CopyFrom(const BmcMetricSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bmcmetrics.metricproto.BmcMetricSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmcMetricSnapshot::IsInitialized() const {
  return true;
}

void BmcMetricSnapshot::InternalSwap(BmcMetricSnapshot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BmcMetricSnapshot, fdstat_metric_)
      + sizeof(BmcMetricSnapshot::fdstat_metric_)
      - PROTOBUF_FIELD_OFFSET(BmcMetricSnapshot, string_table_)>(
          reinterpret_cast<char*>(&string_table_),
          reinterpret_cast<char*>(&other->string_table_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BmcMetricSnapshot::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace metricproto
}  // namespace bmcmetrics
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcMemoryMetric* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcMemoryMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcMemoryMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcUptimeMetric* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcUptimeMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcUptimeMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcDiskSpaceMetric* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcDiskSpaceMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcDiskSpaceMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcProcStatMetric_BmcProcStat >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcProcStatMetric* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcProcStatMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcProcStatMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcFdStatMetric_BmcFdStat >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcFdStatMetric* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcFdStatMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcFdStatMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcStringTable_StringEntry* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcStringTable_StringEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcStringTable_StringEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcStringTable* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcStringTable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcStringTable >(arena);
}
template<> PROTOBUF_NOINLINE ::bmcmetrics::metricproto::BmcMetricSnapshot* Arena::CreateMaybeMessage< ::bmcmetrics::metricproto::BmcMetricSnapshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bmcmetrics::metricproto::BmcMetricSnapshot >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
