{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6a6579b6_e136b11b",
        "filename": "tof-voters/libvoters/acceptable.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-10T16:43:41Z",
      "side": 1,
      "message": "FWIW I think there is some value in some of the EM configurations.  The ones for re-usable off the shelf components anyway.  But perfect is the enemy of good for todday...",
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ff3f272_9ac65bdb",
        "filename": "tof-voters/libvoters/acceptable.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T23:15:41Z",
      "side": 1,
      "message": "I don\u0027t think there are any reusable components today... but if we can identify them we can filter it out here, certainly.  Right now they\u0027re all company-specific.",
      "parentUuid": "6a6579b6_e136b11b",
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a6e1ff5_defb5f40",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-10T16:43:41Z",
      "side": 1,
      "message": "Isn\u0027t there some convention about required \"options\" that this violates? ;-)",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 30,
        "endChar": 9
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3193e1c_8b30dc43",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T23:15:41Z",
      "side": 1,
      "message": "This could obviously be done as positional arguments but I feel like they are less self-documenting in that way.  (first parameter is \"before\" is far less usable than --before to me).\n\nAs is the argparse gives pretty good error information and is clear which ones are optional and which ones are required (optional has [] wrapper).\n```\n$ ./voters analyze-commits                                              \nusage: voters analyze-commits [-h] --before BEFORE --after AFTER\nvoters analyze-commits: error: the following arguments are required: --before/-b, --after/-a\n$ ./voters --help                \nusage: voters [-h] [--data-directory DATA_DIRECTORY] {analyze-commits,analyze-reviews,dump-gerrit,report} ...\n$ ./voters analyze-commits --help                                    \nusage: voters analyze-commits [-h] --before BEFORE --after AFTER\n```",
      "parentUuid": "2a6e1ff5_defb5f40",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 30,
        "endChar": 9
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4773130_66095401",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-01-10T01:32:04Z",
      "side": 1,
      "message": "Resisting the urge to rewrite this in functional style ðŸ˜œ",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 75,
        "endChar": 24
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb6a7749_2a26a9e4",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T12:47:11Z",
      "side": 1,
      "message": "What do you mean by \"in a functional style\"?  I\u0027m not an especially pythonic developer.",
      "parentUuid": "d4773130_66095401",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 75,
        "endChar": 24
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e995ebb2_185a0e19",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-01-11T00:26:48Z",
      "side": 1,
      "message": "taking the directory listing and processing it with map() and filter() calls to avoid the explicit statefulness of continue.\n\nI didn\u0027t expect you to do anything, was just voicing my instinct when reading the code.",
      "parentUuid": "cb6a7749_2a26a9e4",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 75,
        "endChar": 24
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2523e462_f19910f6",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-01-10T01:32:04Z",
      "side": 1,
      "message": "That\u0027s some hectic formatting",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 83,
        "endChar": 38
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbc41301_adc15491",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T12:47:11Z",
      "side": 1,
      "message": "It was whatever \u0027black\u0027 does automatically, but yes...",
      "parentUuid": "2523e462_f19910f6",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 83,
        "endChar": 38
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9f00fe4_d40e0edf",
        "filename": "tof-voters/libvoters/subcmd/analyze-commits.py",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-01-11T00:26:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bbc41301_adc15491",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 83,
        "endChar": 38
      },
      "revId": "7818b1083b1f6266a8a6761d3554f1c1f29c0270",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}