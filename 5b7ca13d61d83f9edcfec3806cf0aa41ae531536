{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7a2ab966_265b4dfd",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-02T17:38:33Z",
      "side": 1,
      "message": "Any details on why this is the case?  Is it something we could just trivially fix?",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95687a21_afc1d07e",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-02T17:50:45Z",
      "side": 1,
      "message": "sh change the return format not too many versions ago.  The machine where this script runs as part of the infrastructure is using an old version.\n\nI think that you have to add some `str(result)` casts in most cases to work the way it use to work.  Something like the old versions use to return a string and the new versions return some kind of handle object.",
      "parentUuid": "7a2ab966_265b4dfd",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfb88eb4_f2efd90a",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-02T18:40:38Z",
      "side": 1,
      "message": "I believe it is the other way around, the new version just uses strings, the old version uses something similar to (or maybe the same as?) a CompletedProcess object.\n\nNot knowing anything about the environment in which this is run I wasn\u0027t comfortable making changes that required any environmental changes. I settled for leaving an easy to find comment, though I could see maybe dropping a requirements.txt or a pyproject.toml file as being a good idea too.\n\nIn any case, I believe that fixing this is well outside the scope of this specific change, though I am willing to do that work after this change is accepted.",
      "parentUuid": "95687a21_afc1d07e",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb8d54a_47fd08ef",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-01T19:26:29Z",
      "side": 1,
      "message": "How do we handle updating the webui-vue-licenses.inc?  Any new dependency added to the package-lock.json could also require updating the licenses, right?  Otherwise ... why are we adding all the license lines?",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43024fb2_948d8a53",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-01T19:41:29Z",
      "side": 1,
      "message": "The LICENSE lines were originally created with devtool (which used recipetool) but require manual touchups for a few recipes, verified by manually confirming the license. I have no idea how to best automate this and do not know the OpenBMC infrastructure well enough to suggest an automated solution at this time.\n\nHow often is a new dependency added? Is this even worth automating?\n\nhttps://xkcd.com/1205/",
      "parentUuid": "ecb8d54a_47fd08ef",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b07fd906_da0a8f23",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-01T19:54:32Z",
      "side": 1,
      "message": "If we don\u0027t automate it, how do we know when it is wrong?\n\nThe concern I have is that the person in Nebraska is replaced by 5 new packages and we don\u0027t know that\u0027s happened.  We updated the package-lock but now our licenses are all wrong.  https://xkcd.com/2347/",
      "parentUuid": "43024fb2_948d8a53",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "501646ce_8e15a8f6",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-01T20:53:14Z",
      "side": 1,
      "message": "I\u0027ve removed the LICENSE stuff for now. I believe it is useful/proper to include, but given that the current webui-vue recipe does not contain this information I\u0027d like to decouple properly handling licensing information from the ability to do offline builds.",
      "parentUuid": "b07fd906_da0a8f23",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ef32fc7_f6f569d5",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-02T17:38:33Z",
      "side": 1,
      "message": "\u003e How often is a new dependency added? Is this even worth automating?\n\nAlmost every time we update the packagelock file, SOMETHING changes (even if it\u0027s just a version, we need to point at the license for that versioN). Yes, it needs to be automated.",
      "parentUuid": "501646ce_8e15a8f6",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95923f2e_95eb2f87",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-01T11:37:34Z",
      "side": 1,
      "message": "Why can\u0027t this be generalized to handle any recipe with a `package-lock.json` and uses `npm.bbclass`?",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93849df6_ff073530",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-01T14:02:02Z",
      "side": 1,
      "message": "It could be, but do we even want that? I don\u0027t think we want to actually encourage more NPM packages in OpenBMC?",
      "parentUuid": "95923f2e_95eb2f87",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3d43506_297f7d3e",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-01T19:26:29Z",
      "side": 1,
      "message": "If I had to choose between something generic and something that is hard coded to webui-vue, both of which are a similar amount of lines ... ;)\n\nWhile right now the project doesn\u0027t want to add any new JS packages, I can\u0027t predict the future and I can\u0027t predict the potential utility of this for companies that might decide to load their own JS/TS packages.",
      "parentUuid": "93849df6_ff073530",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "159c6d9e_08fa1ab6",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-01T19:41:29Z",
      "side": 1,
      "message": "I tend to prefer the hard coded approach when there is only a single instance, though I could see why someone would prefer the generic approach first.\n\nIs a generic solution a hard requirement for this to be merged?",
      "parentUuid": "f3d43506_297f7d3e",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34886799_e6f2837c",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-02T05:38:16Z",
      "side": 1,
      "message": "Not IMO. It sounds like it\u0027s not hard to make generic if necessary (\"similar amount of lines\")?",
      "parentUuid": "159c6d9e_08fa1ab6",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ff04b46_ba93e3f5",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-02T13:09:58Z",
      "side": 1,
      "message": "I\u0027m more pointing out that the requested work was done, but only after the fact was it determined that it was done \"wrong\" (this is entirely subjective!) even though it was never requested to be done in one way or another, nor is there any documentation on the project requesting a \"generic style\" versus a \"hardcoded style\".\n\nI can redo this, though I\u0027ll probably wind up pulling in the pathlib module because I find it significantly easier to work with for the requested operations (basically any sort of file operations), which will result in a larger change.\n\nI\u0027m not mad about being asked to redo work, I am annoyed that I\u0027m expected to be able to read minds! Doubly so for work on a repo that states:\n\n\"Then this repository aims to be the default destination for your otherwise un-homed scripts. As such we are setting the bar for submission pretty low, and we aim to make the process as easy as possible.\"",
      "parentUuid": "34886799_e6f2837c",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dde3bba_8afbc480",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-02T17:23:19Z",
      "side": 1,
      "message": "\u003e ... I am annoyed ...\n\nWelcome to open source development. 😋\n\n\u003e ... work on a repo that states ...\n\nWe probably should move this tool to openbmc-build-scripts.  @Andrew G.",
      "parentUuid": "5ff04b46_ba93e3f5",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b02becb9_09cc153a",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-02T17:38:33Z",
      "side": 1,
      "message": "\u003e I\u0027m not mad about being asked to redo work\n\nIs it a lot of work to check that a file exists?  I must be missing something.  I don\u0027t see anywhere else in this file where we\u0027ve hard coded a single bb recipe name, so hopefully that was a hint?\n\n\nAdmittedly, the autobump script doesn\u0027t really fit under the description of \"un-homed\" and it\u0027s used quite heavily;  its existence in this repo doesn\u0027t really do that justice.  Arguably it should go in openbmc-build-scripts these days? but that\u0027s a discussion for another time.",
      "parentUuid": "5ff04b46_ba93e3f5",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54112eb8_1cbb256b",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-02T18:40:38Z",
      "side": 1,
      "message": "Unfortunately no, it was not a hint to me, I never even really had that as a consideration.\n\nIn any case I\u0027ll fix this up today.",
      "parentUuid": "b02becb9_09cc153a",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97006c7d_ad8e5deb",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1001140
      },
      "writtenOn": "2024-07-02T20:28:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54112eb8_1cbb256b",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a079ff39_695bed3f",
        "filename": "openbmc-autobump/openbmc-autobump.py",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-03T00:51:46Z",
      "side": 1,
      "message": "I think my statement was misunderstood (and was not clearly worded). I wasn\u0027t trying to suggest I want it fixed, I was suggesting that I\u0027m fine to submit it with the hard-coded approach as it _didn\u0027t_ sound hard to fix that down the track. I was happy to submit it as is so long as everyone else was happy.\n\nI think that jives with\n\n\u003e As such we are setting the bar for submission pretty low\n\nand that there isn\u0027t any inconsistency here, just a misunderstanding of my response.\n\n\u003e Admittedly, the autobump script doesn\u0027t really fit under the description of \"un-homed\" and it\u0027s used quite heavily\n\nYes, it should be moved elsewhere.",
      "parentUuid": "97006c7d_ad8e5deb",
      "revId": "5b7ca13d61d83f9edcfec3806cf0aa41ae531536",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}